---
ansible_ssh_port: 22

inv_install_apache: true
inv_install_haproxy: true

inv_add_apache_confs_http_listen_port: "{{ inv_install_apache_http_listen_port }}"
inv_add_apache_confs_https_listen_port: "{{ inv_install_apache_https_listen_port }}"

inv_add_apache_confs_webmaster: "your.webmaster@domain.tld"
inv_add_apache_confs_request_body: 0
inv_add_apache_confs_security_body_limit: 1024000000

inv_add_apache_confs_ssl_files_path: "/etc/apache2/ssl"
inv_add_apache_confs_confs_path: "/etc/apache2/sites-available"
inv_add_apache_confs_base_document_root: "/var/www/html"

inv_add_apache_confs_configurations_cert_bundles:
  - name: "My-Local-Ansible-Root-CA.pem.crt"
    type: "CA"
    src: "/tmp/My-Local-Ansible-Root-CA.pem.crt"

  - name: "My-Local-Ansible-Intermediate-CA-1.pem.crt"
    type: "CA"
    src: "/tmp/My-Local-Ansible-Intermediate-CA-1.pem.crt"

  - name: "My-Local-Ansible-Intermediate-CA-2.pem.crt"
    type: "CA"
    src: "/tmp/My-Local-Ansible-Intermediate-CA-2.pem.crt"

  - name: "my-haproxy-server.domain.tld"
    type: "cert"
    src: "/tmp/my-haproxy-server.domain.tld.zip"
    dest: "/etc/apache2/ssl"
    #src_user: "myUser"
    #src_password: "secretPassword"
    dest_user: "www-data"
    dest_group: "www-data"
    dest_mode: "0700"

inv_add_apache_confs_configurations:
  - server:
      name: "my-haproxy-server.domain.tld"
      aliases:
        - "localhost"
        - "127.0.0.1"
      webmaster: "{{ inv_add_apache_confs_webmaster }}"
    ssl:
      enabled: true
      key: "{{ inv_add_apache_confs_ssl_files_path }}/my-haproxy-server.domain.tld/my-haproxy-server.domain.tld.pem.key"
      crt: "{{ inv_add_apache_confs_ssl_files_path }}/my-haproxy-server.domain.tld/my-haproxy-server.domain.tld.pem.crt"
    proxy:
      url: "https://127.0.0.1:8080"
      pass: "/"
    security:
      disabled: false
      request_body: 4096000
      #sec_rules_remove_by_id:
      #  - 949110
      #  - 933120

inv_add_haproxy_http_confs_cert_bundles: "{{ inv_install_haproxy_cert_bundles }}"
inv_add_haproxy_http_confs_configurations:
  - name: "proxy-google"
    frontend:
      description: "My HTTPS HAProxy proxy-google with backup"
      bind: "*"
      port: 8181
      https: true
      crt: "{{ inv_install_haproxy_ssl_path }}/my-haproxy-server.domain.tld/my-haproxy-server.domain.tld.pem.crt"
      key: "{{ inv_install_haproxy_ssl_path }}/my-haproxy-server.domain.tld/my-haproxy-server.domain.tld.pem.key"
      mode: "http"
    backend:
      balance: leastconn
      options:
        - httpclose
        - forwardfor
        - httpchk GET /
      forwarded_port: 443
      http_check_status: 200
      servers:
        - name: "google.com-as-BACKUP"
          addresse: "google.com"
          port: 443
          https: true
          backup: true
        - name: "google.com"
          addresse: "google.com"
          port: 443
          https: true

inv_add_haproxy_bdd_confs_cert_bundles: "{{ inv_install_haproxy_cert_bundles }}"
inv_add_haproxy_bdd_confs_configurations:
  - name: "my.cluster.database.domain.tld"
    frontend:
      description: "My first cluster database with TCP frontend address"
      bind: "*:10040"
      mode: "tcp"
    backend:
      balance: roundrobin
      options:
        - tcpka
      servers:
        - name: "backend-server-1"
          addresse: "127.0.0.1"
          port: "3306"
        - name: "backend-server-2"
          addresse: "127.0.0.1"
          port: "3306"
        - name: "backend-server-3"
          addresse: "127.0.0.1"
          port: "3306"

  - name: "my.cluster-failover.database.domain.tld"
    frontend:
      description: "My first cluster database with TCP frontend address and FAILOVER"
      bind: "*:10040"
      mode: "tcp"
    backend:
      balance: roundrobin
      options:
        - tcpka
      servers:
        - name: "backend-server-1"
          addresse: "127.0.0.1"
          port: "3306"
        - name: "backend-server-2"
          addresse: "127.0.0.1"
          port: "3306"
          backup: true
        - name: "backend-server-3"
          addresse: "127.0.0.1"
          port: "3306"
          backup: true